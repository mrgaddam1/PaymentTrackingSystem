@page "/client/clientList"
@using PaymentTrackingSystem.Client.Infrastructure.Interface
@using PaymentTrackingSystem.Shared
@using Radzen.Blazor

@inject ILogger<ClientList> Logger
@inject IClientService ClientService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender:false))
<div class="row" >
    <div class="col-lg-6" align="left">
        <h2>Clients</h2>
    </div>
    <div class="col-lg-6" align="right">
        <button @onclick="AddClient" class="btn btn-success fw-bold">
            <i class="fas fa-plus" aria-hidden="true"></i>
            &nbsp;&nbsp;Add Client
        </button>
    </div>
</div>
<div class="row">
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
</div>
<div class="row">
    <div class="col-lg-12">
        @if (ClientData != null)
        {  
          <RadzenDataGrid class="radzen-grid radgen-grid-font"
                   Data="@ClientData"
                    TItem="ClientViewModel"
                    EditMode="Radzen.DataGridEditMode.Single"
                    AllowFiltering="true"
                    AllowPaging="true"
                    AllowSorting="true"
                    PageSize="15"
                    GridLines="@GridLines">
        <Columns>
            <RadzenDataGridColumn Property="ClientId" Title="Id" Width="100" Visible="false" />
            <RadzenDataGridColumn Property="FirstName" Title="First Name" />
            <RadzenDataGridColumn Property="LastName" Title="Last Name" />
            <RadzenDataGridColumn Property="EmailId" Title="Email Id" />
            <RadzenDataGridColumn Property="MobileNumber" Title="Mobile Number">
                <Template Context="data">
                    <span style="color:blue;font-weight:600;">
                        @{
                            var maskedNumber = MaskMobile((string)data.MobileNumber);
                        }
                        @maskedNumber
                    </span>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="AddressLine1" Title="Address Line1" />
            <RadzenDataGridColumn Property="AddressLine2" Title="Address Line2" />
            <RadzenDataGridColumn Property="City" Title="City" />
            <RadzenDataGridColumn Property="Postcode" Title="Postcode" />

            <RadzenDataGridColumn TItem="ClientViewModel">
                <Template Context="data">
                    <RadzenButton ButtonType="Radzen.ButtonType.Button"
                                  Icon="edit" Size="Radzen.ButtonSize.Small"
                                  Style="margin-right:5px;"
                                  Click="@(() => EditRow(data))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid> 
          }  
    </div>
</div>

@code {
    private string? errorMessage;
    public List<ClientViewModel> ClientData = new List<ClientViewModel>();
    Radzen.DataGridGridLines GridLines = Radzen.DataGridGridLines.Both;
    string MaskMobile(string number)
    {
        if (string.IsNullOrWhiteSpace(number) || number.Length < 4)
            return "****";

        // Mask all but last 4 digits
        return new string('*', number.Length - 4) + number[^4..];
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ClientData = await ClientService.GetAllClients<List<ClientViewModel>>();
        }
        catch(Exception ex)
        {
            Logger.LogError(ex, "Error loading data.");
        }
        
    }
    void EditRow(ClientViewModel clientViewModel)
    {
        NavigationManager.NavigateTo("/customers/updateCustomer" + "/" + Convert.ToString(clientViewModel.ClientId));
    }
    private void AddClient()
    {
        NavigationManager.NavigateTo("/client/addClient");
    }
}
