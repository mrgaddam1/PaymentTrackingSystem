@page "/clientPayments/clientPaymentList"
@using PaymentTrackingSystem.Client.Infrastructure.Interface
@using PaymentTrackingSystem.Shared
@using Radzen.Blazor

@inject ILogger<List> Logger
@inject IPaymentService PaymentService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender:false))
<div class="row">
    <div class="col-lg-6" align="left">
        <h2>Clients</h2>
    </div>
    <div class="col-lg-6" align="right">
        <button @onclick="AddClient" class="btn btn-success fw-bold">
            <i class="fas fa-plus" aria-hidden="true"></i>
            &nbsp;&nbsp;Add Client
        </button>
    </div>
</div>
<div class="row">
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
</div>
<div class="row">
    <div class="col-lg-12">
        @if (clientPaymentData != null)
        {
            <RadzenDataGrid class="radzen-grid radgen-grid-font"
                            Data="@clientPaymentData"
                            TItem="ClientPaymentViewModel"
                            EditMode="Radzen.DataGridEditMode.Single"
                            AllowFiltering="true"
                            AllowPaging="true"
                            AllowSorting="true"
                            PageSize="15"
                            GridLines="@GridLines">
                <Columns>
                    <RadzenDataGridColumn Property="PaymentId" Title="Id" Width="100" Visible="false" />
                    <RadzenDataGridColumn Property="FirstName" Title="First Name" />
                    <RadzenDataGridColumn Property="LastName" Title="Last Name" />

                    <RadzenDataGridColumn Property="Amount" Title="Amount" />
                    <RadzenDataGridColumn Property="AmountTransferedDate" Title="Transfered Date" />
                    <RadzenDataGridColumn Property="InterestRate" Title="Interest Rate" />

                    <RadzenDataGridColumn TItem="ClientPaymentViewModel">
                        <Template Context="data">
                            <RadzenButton ButtonType="Radzen.ButtonType.Button"
                                          Icon="edit" Size="Radzen.ButtonSize.Small"
                                          Style="margin-right:5px;"
                                          Click="@(() => EditRow(data))" />
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        }
    </div>
</div>

@code {
    private string? errorMessage;
    public List<ClientPaymentViewModel> clientPaymentData = new List<ClientPaymentViewModel>();
    Radzen.DataGridGridLines GridLines = Radzen.DataGridGridLines.Both;    

    protected override async Task OnInitializedAsync()
    {
        try
        {
            clientPaymentData = await PaymentService.GetAllClientPayments<List<ClientPaymentViewModel>>();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading data.");
        }
    }
    void EditRow(ClientPaymentViewModel clientPaymentViewModel)
    {
        NavigationManager.NavigateTo("/clientPayments/updateClientPayment" + "/" + Convert.ToString(clientPaymentViewModel.PaymentId));
    }
    private void AddClient()
    {
        NavigationManager.NavigateTo("/clientPayments/addClientPayment");
    }
}

 
