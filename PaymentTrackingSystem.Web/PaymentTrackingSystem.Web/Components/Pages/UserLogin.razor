@page "/userLogin"
@layout EmptyLayout
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using PaymentTrackingSystem.Client.Infrastructure.Interface
@using PaymentTrackingSystem.Common.Helpers
@using PaymentTrackingSystem.Common.Helpers.Implmentation
@using PaymentTrackingSystem.Common.Helpers.Interface
@using PaymentTrackingSystem.Shared
@using PaymentTrackingSystem.Web.Components.Layout

@inject IEncryptionHelper EncryptionHelper
@inject NavigationManager Navigation
@inject IAuthService iAuthService
@inject AuthenticationStateProvider authStateProvider
@inject IHttpContextAccessor HttpContextAccessor
@inject ProtectedLocalStorage protectedLocalStorage
@inject IConfiguration Configuration
@rendermode InteractiveServer


@if (IsLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
        <div class="spinner-grow text-success" role="status" style="width: 3rem; height: 3rem;">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>}
else
{
    <div class="login-container">
    <h2>Login</h2>
    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
        <div class="input-group">
            <div class="col-md-2">
                <label for="email">Email</label>
            </div>
            <div class="col-lg-6">
                <InputText id="email"
                           @bind-Value="loginModel.Username"
                           class="form-control"
                           style="width:370px;"
                           placeholder="Enter your email" required />
            </div>
        </div>
        <div class="input-group">
            <div class="col-md-2">
                <label for="password">Password</label>
            </div>
            <div class="col-lg-6">
                <InputText type="password"
                           id="password"
                           @bind-Value="loginModel.Password"
                           class="form-control"
                           style="width:370px;"
                           placeholder="Enter your password" required />
            </div>
        </div>
        <button type="submit" class="login-btn">Login</button>
        <a href="#" class="forgot-password">Forgot Password?</a>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3 text-center">@errorMessage</div>
        }
    </EditForm>
</div>
}

@code {
    private bool IsLoading = false;
    private LoginViewModel loginModel = new LoginViewModel();
    private UserViewModel userData = new UserViewModel();
    private string errorMessage = "";
 

    protected async Task HandleLogin()
    {
        IsLoading = true;
        var user = await iAuthService.UserLogin<UserViewModel>(loginModel);
        if (user != null)
        {
            await protectedLocalStorage.SetAsync("PTSToken", user.Token);
            await protectedLocalStorage.SetAsync("UserName", user.UserName);
            await protectedLocalStorage.SetAsync("RoleName", "SuperAdmin");
          
            var Token = Uri.EscapeDataString(EncryptionHelper.Encrypt(user.Token));
            var UserName = Uri.EscapeDataString(EncryptionHelper.Encrypt(user.UserName));
 
            Navigation.NavigateTo("/navigationMenu/menu" + "/" + Token + "/" + UserName);
           
        }
        else
        {
            errorMessage = "EmailId or Password wrong.";
            loginModel.Username = "";
            loginModel.Password = "";
        }
        IsLoading = false;
    }

}
<style type="text/css">
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    body {
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: #fff;
        /* linear-gradient(135deg, #667eea, #764ba2); */
        background-size: 400% 400%;
        animation: gradientBG 6s infinite alternate ease-in-out;
    }

    .login-container {
        background: #fff;
        padding: 2rem;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        width: 500px;
        text-align: center;
        margin-left:30%;
        margin-top:10%;
    }

        .login-container h2 {
            margin-bottom: 1.5rem;
            font-weight: 600;
        }

    .input-group {
        margin-bottom: 1rem;
        text-align: left;
        width: 500px;
    }

        .input-group label {
            display: block;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .input-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
            transition: 0.3s;
        }

            .input-group input:focus {
                border-color: #667eea;
            }

    .login-btn {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        background: #667eea;
        color: white;
        font-weight: 600;
        cursor: pointer;
        transition: 0.3s;
    }

        .login-btn:hover {
            background: #5a67d8;
        }

    .forgot-password {
        display: block;
        margin-top: 1rem;
        font-size: 0.9rem;
        color: #667eea;
        text-decoration: none;
    }

        .forgot-password:hover {
            text-decoration: underline;
        }
</style>
